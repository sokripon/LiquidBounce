/*
 * This file is part of LiquidBounce (https://github.com/CCBlueX/LiquidBounce)
 *
 * Copyright (c) 2015 - 2023 CCBlueX
 *
 * LiquidBounce is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * LiquidBounce is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with LiquidBounce. If not, see <https://www.gnu.org/licenses/>.
 */
package net.ccbluex.liquidbounce.features.module.modules.exploit


import net.ccbluex.liquidbounce.event.events.PacketEvent
import net.ccbluex.liquidbounce.event.handler
import net.ccbluex.liquidbounce.features.module.Category
import net.ccbluex.liquidbounce.features.module.Module
import net.minecraft.network.packet.c2s.play.ClientCommandC2SPacket
import net.minecraft.network.packet.c2s.play.PlayerActionC2SPacket
import net.minecraft.network.packet.c2s.play.PlayerInteractItemC2SPacket
import net.minecraft.network.packet.c2s.play.PlayerMoveC2SPacket

/** ProjectileAccelerator module
 * Allows you to shoot/trow faster projectiles.
 * This is also known as BowBomb
 * This only works on vanilla servers.
 */
object ModuleProjectileAccelerator : Module("ProjectileAccelerator", Category.EXPLOIT) {

    private val accelerationCycles by int("AccelerationCycles", 20, 1..100)

    val packetHandler = handler<PacketEvent> { event ->
        val packet = event.packet
        if (packet is PlayerActionC2SPacket && packet.action == PlayerActionC2SPacket.Action.RELEASE_USE_ITEM ||
            packet is PlayerInteractItemC2SPacket) {
            if (player.isSprinting) {
                network.sendPacket(ClientCommandC2SPacket(player, ClientCommandC2SPacket.Mode.STOP_SPRINTING))
            }
            network.sendPacket(ClientCommandC2SPacket(player, ClientCommandC2SPacket.Mode.START_SPRINTING))
            network.sendPacket(
                PlayerMoveC2SPacket.PositionAndOnGround(
                    player.x, player.y + 1e-10, player.z, false
                )
            )
            repeat(accelerationCycles) {
                network.sendPacket(
                    PlayerMoveC2SPacket.PositionAndOnGround(
                        player.x, player.y - 1e-10, player.z, true
                    )
                )
                network.sendPacket(
                    PlayerMoveC2SPacket.PositionAndOnGround(
                        player.x, player.y + 1e-10, player.z, false
                    )
                )
            }
            network.sendPacket(ClientCommandC2SPacket(player, ClientCommandC2SPacket.Mode.STOP_SPRINTING))
        }
    }
}
